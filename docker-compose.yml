version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: jimuqu-devops-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: jimuqu_devops
      MYSQL_USER: devops
      MYSQL_PASSWORD: devops123
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/src/main/resources/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./docker/mysql/conf.d:/etc/mysql/conf.d:ro
    networks:
      - devops-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      timeout: 5s
      retries: 10
      interval: 10s

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: jimuqu-devops-backend
    restart: unless-stopped
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=jimuqu_devops
      - DB_USERNAME=devops
      - DB_PASSWORD=devops123
      - DOCKER_HOST=unix:///var/run/docker.sock
    ports:
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - backend_workspace:/tmp/jimuqu-devops/workspace
      - backend_logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - devops-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      timeout: 5s
      retries: 5
      interval: 30s

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: jimuqu-devops-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - devops-network
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      timeout: 5s
      retries: 3
      interval: 30s

  # Redis缓存服务（可选）
  redis:
    image: redis:7-alpine
    container_name: jimuqu-devops-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - devops-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
      interval: 10s

networks:
  devops-network:
    driver: bridge
    name: jimuqu-devops-network

volumes:
  mysql_data:
    name: jimuqu-devops-mysql-data
  redis_data:
    name: jimuqu-devops-redis-data
  backend_workspace:
    name: jimuqu-devops-workspace
  backend_logs:
    name: jimuqu-devops-logs